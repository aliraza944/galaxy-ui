{"version":3,"sources":["logo.svg","axios.js","componenet/Layout/Layout.js","componenet/Table/Table.js","container/LiveEvents/LiveEvents.js","container/OrgContribution.js","container/Country/LoadedCountries.js","container/Country/CountrySelect.js","container/Country/Country.js","App.js","reportWebVitals.js","index.js"],"names":["console","log","process","instance","axios","create","baseURL","interceptors","response","use","error","message","Promise","resolve","defaults","headers","common","preflightContinue","layout","props","Fragment","href","children","Table","useState","showAllTable","setshowAllTable","title","className","mappedFeatures","slice","map","item","key","count","action","onClick","e","preventDefault","LiveEvents","startDate","setstartDate","endDate","setendDate","projectsIds","setprojectsIds","hashtags","sethashtags","liveEventData","setliveEventData","getLiveEventStats","a","apiEndPoint","encodeURI","get","res","data","useMutation","mutate","isLoading","type","placeholder","disabled","value","onChange","target","rows","contributersCount","filter","OrgContribution","fetchStats","useQuery","refetch","Date","LineChart","width","height","margin","left","right","XAxis","dataKey","reversed","tickFormatter","tickItem","getMonth","getFullYear","YAxis","domain","Tooltip","Legend","Line","stroke","LoadedCountries","loadedCountries","class","name_en","CountrySelect","fetchLoadedCountries","defaultValue","Country","setselectedCountry","country","event","countryBuildingsByMonth","length","style","textAlign","color","countryValidatedBuildings","validated_buildings","withRouter","Layout","fallback","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.ddaac836.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\n\nconsole.log('process.env.REACT_APP_API_BASE',process.env.REACT_APP_API_BASE)\n\nconst instance = axios.create(\n    {\n        baseURL: process.env.REACT_APP_API_BASE\n    }\n);\n\n\ninstance.interceptors.response.use((response) => {\n    console.log('response succcess')\n    return response;\n  }, (error) => {\n\n\n    console.log('API response error',error.message)\n    return Promise.resolve({ error });\n  });\n\ninstance.defaults.headers.common = {\n    ...instance.defaults.headers.common,\n    \n    \"Content-Type\": 'application/json',\n };\n instance.defaults.preflightContinue = true;\n \nexport default instance;","import React, { useState } from \"react\";\n\nconst layout = props => {\n   \n    \n    return (\n      <React.Fragment>\n       \n        <div>\n            <span> <a href=\"#/country-insights\"> Country Insights</a></span>\n            <span> || </span>\n            <span> <a href=\"#/live-events\"> Live Events</a></span>\n            {/* <span> || </span>\n            <span> <a href=\"#/org-contribution\"> Org Contribution </a></span> */}\n        </div>\n        {/* <div class=\"w3-sidebar w3-light-grey w3-bar-block\" >\n          <h3 class=\"w3-bar-item\">Menu</h3>\n          <a href=\"#\" class=\"w3-bar-item w3-button\">Link 1</a>\n          <a href=\"#\" class=\"w3-bar-item w3-button\">Link 2</a>\n          <a href=\"#\" class=\"w3-bar-item w3-button\">Link 3</a>\n        </div> */}\n        <main >{props.children}</main>\n      </React.Fragment>\n    );\n  \n}\n\n\nexport default layout;\n","import React from 'react'\nimport { useState } from 'react';\n\n\nconst Table = props =>\n{\n\n    const [showAllTable, setshowAllTable] = useState(false);\n    return <> \n     <h2>{props.title}</h2>\n                  <table className=\"\">\n                    <thead>\n                      <tr>\n                        <th>Feature</th>\n                        <th>Count</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {!showAllTable &&\n                        props.mappedFeatures.slice(0, 10).map(\n                          (item) =>(\n                              <tr key={item.key + item.action}>\n                                <td>{item.key}</td>\n                                <td>{item.count}</td>\n                              </tr>\n                            )\n                        )}\n                      {showAllTable &&\n                        props.mappedFeatures.map(\n                          (item) => (\n                              <tr key={item.key + item.action}>\n                                <td>{item.key}</td>\n                                <td>{item.count}</td>\n                              </tr>\n                            )\n                        )}\n                    </tbody>\n                  </table>\n\n                  <a\n                    href=\"/\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      setshowAllTable(!showAllTable);\n                    }}\n                  >\n                    {showAllTable ? \"Show less\" : \"Show all\"}\n                  </a>\n    </>\n}\n\nexport default Table;","import React, { useState } from \"react\";\nimport { useMutation } from \"react-query\";\nimport \"./LiveEvents.css\";\nimport axios from \"../../axios\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Table from \"../../componenet/Table/Table\";\n\nconst LiveEvents = (props) => {\n  const [startDate, setstartDate] = useState(\"2021-08-27 09:00:00\");\n  const [endDate, setendDate] = useState(\"2021-08-27 11:00:00\");\n  const [projectsIds, setprojectsIds] = useState(\n    \"11224,10042,9906,1381,11203,10681,8055,8732,11193,7305,11210,10985,10988,11190,6658,5644,10913,6495,4229\"\n  );\n  const [hashtags, sethashtags] = useState(\"mapandchathour2021\");\n\n  const [liveEventData, setliveEventData] = useState(null);\n  const [showAllTable, setshowAllTable] = useState(false);\n  const getLiveEventStats = async () => {\n    try {\n      console.log(\"calling /live_events\");\n      const apiEndPoint = encodeURI(\n        `/live_events/${startDate}/${endDate}/${projectsIds}/${\n          hashtags ? hashtags : \" \"\n        }`\n      );\n      const res = await axios.get(apiEndPoint);\n      console.log(\"res\", res);\n      if (res.error);\n      else if (!res) {\n        // there is an error\n        // no result\n      } else {\n        setliveEventData(res.data);\n        console.log(\"res\", res);\n        return res.data;\n      }\n    } catch (error) {\n      console.log(\"Custom Error\", error);\n    }\n  };\n  const { mutate, isLoading } = useMutation(getLiveEventStats);\n  const getData = () => {\n    mutate();\n    console.log(\"call API\");\n  };\n  return (\n    <>\n      <div className=\"live-event-style\">\n        <label>Event between</label>{\" \"}\n        <input\n          type=\"text\"\n          placeholder=\"Start Date\"\n          disabled={isLoading}\n          value={startDate}\n          onChange={(e) => {\n            setstartDate(e.target.value);\n          }}\n        ></input>\n        <label>and</label>\n        <input\n          type=\"text\"\n          placeholder=\"End Date\"\n          disabled={isLoading}\n          value={endDate}\n          onChange={(e) => {\n            setendDate(e.target.value);\n          }}\n        ></input>\n        <div>\n          <div>\n            <label>\n              {\" \"}\n              Project Ids{\" \"}\n              <div className=\"tooltip\">\n                {\" \"}\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                  }}\n                  className=\"help\"\n                >\n                  ?\n                </a>\n                <span className=\"tooltiptext\">\n                  Project IDs as comma separated values. They will be used to\n                  filter the changesets based HOT TM standard hashtags\n                  (hotosm-project-PROJECT_ID)\n                  <br />\n                  <br />\n                  Filtering is done on the hashtags or the comment fields of a\n                  changeset\n                </span>\n              </div>\n            </label>\n            <textarea\n              value={projectsIds}\n              disabled={isLoading}\n              onChange={(e) => {\n                setprojectsIds(e.target.value);\n              }}\n              placeholder=\"Project IDs are entered here, ex: 11224,15985\"\n              rows=\"8\"\n            />\n          </div>\n          <div>\n            <label>\n              Hashtags{\" \"}\n              <div className=\"tooltip\">\n                {\" \"}\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                  }}\n                  className=\"help\"\n                >\n                  ?\n                </a>\n                <span className=\"tooltiptext\">\n                  Add here any hashtag that is associated with the event,\n                  hashtags will be used to filter the changesets based on the\n                  hashtags or comment field\n                </span>\n              </div>\n            </label>\n            <textarea\n              value={hashtags}\n              disabled={isLoading}\n              onChange={(e) => {\n                sethashtags(e.target.value);\n              }}\n              placeholder=\"#mapandchathour2021\"\n              rows=\"8\"\n            />\n          </div>\n        </div>\n        <button\n          onClick={getData}\n          disabled={\n            startDate === \"\" ||\n            endDate === \"\" ||\n            projectsIds === \"\" ||\n            isLoading\n          }\n        >\n          Refresh\n        </button>\n        <div>\n          <p>\n            Refreshing the insights might take ~ 15 seconds based on the event\n            duration, number of projects and hashtags\n          </p>\n          {isLoading && (\n            <div className=\"lds-ring\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          )}\n        </div>\n        {liveEventData && !isLoading && (\n          <div>\n            <div>\n              <h1> Total Contributors = {liveEventData.contributersCount}</h1>\n              <p>\n                Total number of contributors who have mapped at least a feature\n                during the specified time span and used one of the projects tags\n                (hotosm-project-PROJECT_ID) or an event hashtag in their\n                changeset\n                <br />\n                HOT TM users who have checked/opened TM task and didn't map are\n                not counted\n              </p>\n            </div>\n            \n            <div>             \n                <div className=\"table-left\">\n                  <Table title=\"Event Created Features\" mappedFeatures={liveEventData.mappedFeatures.filter(item=> (item.action === 'create'))} ></Table>\n                </div>\n                <div className=\"table-right\">\n                 <Table title=\"Event Modified Features\" mappedFeatures={liveEventData.mappedFeatures.filter(item=> (item.action === 'modify'))} ></Table>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default LiveEvents;\n","import React from 'react'\nimport { useQuery } from 'react-query';\nimport { Legend, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport axios from \"./../axios\";\n\nconst OrgContribution = props =>\n{\n\n    const fetchStats = async () => {\n        try {\n          //check api route\n          const res = await axios.get(\"/key-stats/asia/Philippines/building\");\n    \n          if (res.error) {\n            console.log(\"Error\", res.error);\n            return;\n          }\n    \n          if (!res) {\n            console.log(\"No response\");\n            return;\n          }\n          console.log(\"res.data\", res.data);\n          // res.data.forEach((d) => {\n          //   d.by_month_osm = moment(d.by_month_osm).valueOf(); // date -> epoch\n          // });\n          return res.data;\n        } catch (err) {\n          console.log(\"Unexpected Error\", err);\n        }\n      };\n    \n      const { data, refetch } = useQuery(\"fetchStats\", fetchStats);\n    \n      const startDate = new Date(2008, 1, 1);\n      const endDate = new Date(2021, 7, 31);\n      const formatXAxis = tickItem => {\n        return new Date(tickItem).getMonth() + '-' + new Date(tickItem).getFullYear() ;\n      }\n    return <>\n     <div>\n        <select>\n          <option value=\"africa\">Africa</option>\n          <option value=\"asia\">Asia</option>\n          <option value=\"africa\">Central America</option>\n          <option value=\"africa\">South America</option>\n        </select>\n        <input type=\"text\" placeholder=\"Country\"></input>\n        <input type=\"text\" placeholder=\"Key\"></input>\n\n        {data && (\n          <LineChart\n            data={data}\n            width={1000}\n            height={300}\n            margin={{ left: 20, right: 10 }}\n          >\n            <XAxis\n              dataKey=\"by_month_osm\"\n              reversed\n              tickFormatter={formatXAxis}\n            />\n            <YAxis domain={[0, 12000000]} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"accmulative_total_hot\"\n              stroke=\"#8884d8\"\n            />\n\n            <Line\n              type=\"monotone\"\n              dataKey=\"accmulative_total_osm\"\n              stroke=\"#82ca9d\"\n            />\n          </LineChart>\n        )}\n      </div>\n    </>;\n}\n\nexport default OrgContribution;","import React from 'react'\nimport { useQuery } from 'react-query';\nimport axios from '../../axios'\n\nconst LoadedCountries = props =>\n{\n\n    const loadedCountries = async () =>\n    {\n        try {\n            //check api route\n            const res = await axios.get(\"/loaded_countries\");\n      \n            if (res.error) {\n              console.log(\"Error\", res.error);\n              return;\n            }\n      \n            if (!res) {\n              console.log(\"No response\");\n              return;\n            }\n            console.log(\"loaded_countries\", res.data);\n            // res.data.forEach((d) => {\n            //   d.by_month_osm = moment(d.by_month_osm).valueOf(); // date -> epoch\n            // });\n            return res.data;\n          } catch (err) {\n            console.log(\"Unexpected Error\", err);\n          }\n\n    }\n    const {data, isLoading} = useQuery('loadedCountries',loadedCountries)\n    return <>\n\n         <div class=\"w3-sidebar w3-light-grey w3-bar-block\" >\n          <h3 class=\"w3-bar-item\">Loaded Countries</h3>\n          {data && \n          data.map(item => (\n\n            <a key={item.name_en}  class=\"w3-bar-item w3-button\">{item.name_en}</a>\n          ))\n          }\n         \n          \n        </div>\n    </>;\n\n\n}\n\nexport default LoadedCountries;","import React from 'react'\nimport { useQuery } from 'react-query';\n\nimport axios from '../../axios'\n\nconst CountrySelect = props =>\n{\n    const fetchLoadedCountries = async () => {\n        try {\n          //check api route\n          const res = await axios.get(`/loaded_countries`);\n    \n          if (res.error) {\n            console.log(\"Error\", res.error);\n            return;\n          }\n    \n          if (!res) {\n            console.log(\"No response\");\n            return;\n          }\n          console.log(\"res.data\", res.data);\n          // res.data.forEach((d) => {\n          //   d.by_month_osm = moment(d.by_month_osm).valueOf(); // date -> epoch\n          // });\n          return res.data;\n        } catch (err) {\n          console.log(\"Unexpected Error\", err);\n        }\n      };\n\n    const { data,  isLoading } = useQuery(\"fetchLoadedCountries\", fetchLoadedCountries);\n    return <>\n\n     <select defaultValue=\"Select a country\"\n       onChange={props.onChange}>\n        \n          {isLoading &&  <option value=\"Select a country\">Loading ..</option>}\n          {data && !isLoading && \n          <>\n          <option value=\"Select a country\">Select a country</option>\n          {data.map (item => (\n            <option key={item.name_en} value={item.name_en} >{item.name_en}</option>\n          ))}\n          </>\n          }\n        </select>\n\n    </>\n\n}\nexport default CountrySelect;","import React from \"react\";\nimport LoadedCountries from \"./LoadedCountries\";\nimport \"./Country.css\";\nimport { Legend, Line, LineChart, Tooltip, XAxis, YAxis } from \"recharts\";\nimport axios from \"../../axios\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useState } from \"react\";\nimport CountrySelect from \"./CountrySelect\";\n\nconst Country = (props) => {\n  const [selectedCountry, setselectedCountry] = useState(\"\");\n\n  const fetchStats = async (country) => {\n    try {\n      //check api route\n      const res = await axios.get(`/country-insights/${country}`);\n\n      if (res.error) {\n        console.log(\"Error\", res.error);\n        return;\n      }\n\n      if (!res) {\n        console.log(\"No response\");\n        return;\n      }\n      console.log(\"res.data\", res.data);\n      // res.data.forEach((d) => {\n      //   d.by_month_osm = moment(d.by_month_osm).valueOf(); // date -> epoch\n      // });\n      return res.data;\n    } catch (err) {\n      console.log(\"Unexpected Error\", err);\n    }\n  };\n\n  const { mutate, data, isLoading } = useMutation(\"fetchStats\", fetchStats);\n\n  const formatXAxis = (tickItem) => {\n    return (\n      new Date(tickItem).getMonth() + \"-\" + new Date(tickItem).getFullYear()\n    );\n  };\n\n  const countrySelectHandler = (event) => {\n    setselectedCountry(event.target.value);\n\n    mutate(event.target.value);\n  };\n  return (\n    <>\n      <LoadedCountries />\n      <div className=\"country-insights\">\n        <CountrySelect onChange={countrySelectHandler}></CountrySelect>\n\n        {isLoading && <p>loading ..... </p>}\n        {data && data.countryBuildingsByMonth.length > 0 && !isLoading && (\n          <LineChart\n            data={data.countryBuildingsByMonth}\n            width={1000}\n            height={300}\n            margin={{ left: 20, right: 10 }}\n          >\n            <XAxis dataKey=\"by_month\" tickFormatter={formatXAxis} />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"building_count\" stroke=\"#8884d8\" />\n            <Line\n              type=\"monotone\"\n              dataKey=\"tm_building_count\"\n              stroke=\"#FF5555\"\n            />\n            {/* <Line\n              type=\"monotone\"\n              dataKey=\"accmulative_total_osm\"\n              stroke=\"#82ca9d\"\n            /> */}\n          </LineChart>\n        )}\n        {data && data.countryBuildingsByMonth.length === 0 && (\n          <h3>\n            Buildings are not yet calculated, contact hot tech team over{\" \"}\n            <a\n              href=\"https://hotosm.atlassian.net/servicedesk/customer/portals\"\n              target=\"_blank\"\n            >\n              {\" \"}\n              here{\" \"}\n            </a>\n          </h3>\n        )}\n\n        {data && data.countryBuildingsByMonth.length > 0 && (\n          <div style={{ textAlign: \"left\" }}>\n            <p>\n              <span style={{ color: \"#8884d8\" }}>building_count</span>: refers\n              to the total mapped ways + relations in OSM that have tag\n              building=*\n            </p>\n\n            <p>\n              <span style={{ color: \"#FF5555\" }}>tm_building_count</span>:\n              refers to the total mapped ways + relations in OSM that have tag\n              building=* <strong>and came through HOT TM</strong> using \n              \"hotosm\" hashtag in the comments or hashtags of the changeset\n            </p>\n          </div>\n        )}\n\n        {data && data.countryValidatedBuildings.length === 1 && (\n          <div>\n            <h3>\n              {data.countryValidatedBuildings[0].validated_buildings} Validated\n              buildings\n            </h3>\n\n            <p>\n              <span>Validated buildings</span>: refers to the total # of OSM\n              elelemts ways + relations in OSM that is intersecting with the\n              boundary of a validated task in HOT TM\n            </p>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Country;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport axios from \"./axios\";\n\nimport { BrowserRouter, HashRouter, Route, withRouter } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport Layout from \"./componenet/Layout/Layout\";\nimport LiveEvents from \"./container/LiveEvents/LiveEvents\";\nimport OrgContribution from \"./container/OrgContribution\";\nimport Country from \"./container/Country/Country\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>OSM Galaxy</h1>\n        <p>It is all about OSM</p>\n      </header>\n\n      <HashRouter>\n          <Layout>\n            <Suspense fallback=\"Loading\">\n            <Route path=\"/live-events\" render={(props)=> <LiveEvents {...props} />} ></Route>\n            <Route path=\"/org-contribution\" render={(props)=> <OrgContribution {...props} />} ></Route>\n            <Route path=\"/country-insights\" render={(props)=> <Country {...props} />} ></Route>\n            \n            </Suspense>\n           \n\n          </Layout>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconst queryClient = new QueryClient()\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n    <BrowserRouter >\n      <App></App>\n    </BrowserRouter>\n    </QueryClientProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}